"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(typeof self !== 'undefined' ? self : this)["webpackHotUpdateapp"]("LumaView",{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/MyChutier.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/MyChutier.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"./node_modules/core-js/modules/es.array.reduce.js\");\n/* harmony import */ var core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ \"./node_modules/core-js/modules/es.array.includes.js\");\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_ChutierItem_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ChutierItem.vue */ \"./src/components/ChutierItem.vue\");\n/* harmony import */ var _components_MediaStack_vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/MediaStack.vue */ \"./src/components/MediaStack.vue\");\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  props: {\n    shared_space_path: String\n  },\n  components: {\n    ChutierItem: _components_ChutierItem_vue__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    MediaStack: _components_MediaStack_vue__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n  },\n  data() {\n    return {\n      chutier: undefined,\n      selected_files: [],\n      id: `image_select_${(Math.random().toString(36) + \"00000000000000000\").slice(2, 3 + 2)}`,\n      last_clicked: undefined,\n      selected_items_slugs: [],\n      focused_items_slugs: [],\n      max_items_selected: 15,\n      show_confirm_remove_menu: false\n    };\n  },\n  created() {},\n  mounted() {\n    this.listChutier();\n    this.$api.join({\n      room: this.path\n    });\n  },\n  beforeDestroy() {\n    this.$api.leave({\n      room: this.path\n    });\n  },\n  watch: {\n    // chutier_items() {\n    //   this.selected_items_slugs = this.selected_items_slugs.filter(\n    //     (item_path) => this.chutier_items.find((ci) => ci.$path === item_path)\n    //   );\n    // },\n    selected_items_slugs() {\n      if (\n      // this.selected_items_slugs.length === 0 &&\n      this.show_confirm_remove_menu) this.show_confirm_remove_menu = false;\n      if (this.selected_items_slugs.length > this.max_items_selected) {\n        this.selected_items_slugs = this.selected_items_slugs.slice(0, this.max_items_selected);\n        this.$alertify.delay(4000).error(this.$t(\"notifications.too_many_items_selected\"));\n        setTimeout(() => {\n          this.$alertify.delay(4000).error(this.$t(\"notifications.max_items_is\") + \" \" + this.max_items_selected);\n        }, 500);\n      }\n    },\n    chutier_items() {\n      // check if all items still exist, remove them if that's not the case\n      const cleaned_up_items = this.selected_items_slugs.filter(fis => this.chutier_items.some(ci => ci.$path === fis));\n      if (JSON.stringify(this.selected_items_slugs) !== JSON.stringify(cleaned_up_items)) this.selected_items_slugs = cleaned_up_items;\n    }\n  },\n  computed: {\n    path() {\n      return this.connected_as.$path;\n    },\n    focused_items() {\n      return this.focused_items_slugs.map(fis => this.chutier_items.find(ci => ci.$path === fis));\n    },\n    selected_items() {\n      return this.selected_items_slugs.map(fis => this.chutier_items.find(ci => ci.$path === fis) || false);\n    },\n    all_items_selected() {\n      return this.selected_items.length === this.chutier_items.length;\n    },\n    chutier_items() {\n      if (!this.chutier || !this.chutier.$files) return [];\n      const _medias = JSON.parse(JSON.stringify(this.chutier.$files));\n      _medias.sort((a, b) => +new Date(b.$date_uploaded) - +new Date(a.$date_uploaded));\n      return _medias;\n    },\n    chutier_items_grouped() {\n      const grouped = this.chutier_items.reduce((group, file) => {\n        // var key = file.$date_uploaded;\n\n        var dateObj = new Date(file.$date_created);\n        var month = dateObj.getUTCMonth() + 1; //months from 1-12\n        var day = dateObj.getUTCDate();\n        var year = dateObj.getUTCFullYear();\n        const key = year + \"/\" + month + \"/\" + day;\n        if (!Object.prototype.hasOwnProperty.call(group, key)) group[key] = [];\n        group[key].push(file);\n        return group;\n      }, {});\n      let ordered = [];\n      for (const k in grouped) if (!Object.prototype.hasOwnProperty.call(ordered, k)) ordered.push(k);\n      ordered.sort();\n      ordered.reverse();\n      return ordered.map(o => {\n        return {\n          label: o,\n          files: grouped[o]\n        };\n      });\n    }\n  },\n  methods: {\n    async listChutier() {\n      this.chutier = await this.$api.getFolder({\n        path: this.path\n      }).catch(err => {\n        this.fetch_project_error = err.response;\n        this.is_loading = false;\n      });\n    },\n    toggleSelect(path) {\n      if (this.selected_items_slugs.includes(path)) this.selected_items_slugs = this.selected_items_slugs.filter(i => i !== path);else this.selected_items_slugs.push(path);\n    },\n    setSelectionAsFocus() {\n      this.focused_items_slugs = JSON.parse(JSON.stringify(this.selected_items_slugs));\n    },\n    updateInputFiles($event) {\n      this.selected_files = Array.from($event.target.files);\n      $event.target.value = \"\";\n    },\n    async importedMedias($event) {\n      $event;\n      // console.log(\"selected_items_slugs = \" + $event);\n      // this.selected_items_slugs = $event.map(\n      //   (i) => this.connected_as.$path + \"/\" + i\n      // );\n    },\n\n    selectAll() {\n      this.selected_items_slugs = this.chutier_items.map(i => i.$path);\n    },\n    deselectAll() {\n      this.selected_items_slugs = [];\n    },\n    selectRange(range) {\n      this.selected_items_slugs = this.selected_items_slugs.concat(range);\n      this.selected_items_slugs = [...new Set(this.selected_items_slugs)];\n    },\n    deselectRange(range) {\n      this.selected_items_slugs = this.selected_items_slugs.filter(si => !range.includes(si));\n    },\n    rangeIsSelected(range) {\n      if (this.selected_items_slugs.length === 0) return false;\n      // for each item in range, make sure it is included in selected_items_slugs\n      return !range.find(p => {\n        if (this.selected_items_slugs.includes(p) === false) return true;\n        return false;\n      });\n    },\n    async removeItemsInSelection() {\n      for (const item_path of this.selected_items_slugs) {\n        await this.$api.deleteItem({\n          path: item_path\n        });\n      }\n      this.show_confirm_remove_menu = false;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/components/MyChutier.vue?vue&type=script&lang=js&\n");

/***/ })

});